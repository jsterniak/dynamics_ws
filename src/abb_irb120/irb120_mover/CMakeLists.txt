cmake_minimum_required(VERSION 2.8.3)
project(irb120_mover)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  geometry_msgs
  std_msgs
  roscpp
  moveit_ros_planning_interface
)
find_package(cmake_modules REQUIRED)
find_package(Eigen REQUIRED)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
#  LIBRARIES irb120_mover
  CATKIN_DEPENDS roscpp geometry_msgs std_msgs moveit_ros_planning_interface
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  include
  ${catkin_INCLUDE_DIRS}
)

## Declare a C++ library
# add_library(irb120_mover
#   src/${PROJECT_NAME}/irb120_mover.cpp
# )

#FILE(GLOB_RECURSE LibFiles "include/*.hpp")
#add_custom_target(headers SOURCES ${LibFiles})

## Declare a C++ executable
 add_executable(irb120_mover_node src/main.cpp)
 add_executable(irb120_main_loop src/state_machine.cpp)
 add_executable(irb120_move_robot src/MoveRobot.cpp)
 add_executable(irb120_robot_mover src/robot_mover.cpp)
## Specify libraries to link a library or executable target against
add_library(irb120_move_robot_lib src/MoveRobot.cpp)

target_link_libraries(irb120_main_loop irb120_move_robot_lib)

 target_link_libraries(irb120_mover_node
   ${catkin_LIBRARIES}
)

 target_link_libraries(irb120_main_loop
   ${catkin_LIBRARIES}
 )

 target_link_libraries(irb120_robot_mover
   ${catkin_LIBRARIES}
 )

 target_link_libraries(irb120_move_robot
   ${catkin_LIBRARIES}
 )
#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS irb120_mover irb120_mover_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_irb120_mover.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
